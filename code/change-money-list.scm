(define (cmp-list l1 l2)
  (cond ((and (null? l1) (null? l2)) #t)
	((or (null? l1) (null? l2)) #f)
	((= (car l1) (car l2)) (cmp-list (cdr l1) (cdr l2))))
  )
(define (count-change amount coins)
  (cc amount coins))
(define (cc amount coins)
  (cond ((= amount 0) 1)
        ((or (< amount 0) (cmp-list coins '())) 0)
        (else (+ (cc amount (cdr coins))
                 (cc (- amount (car coins)) coins)))
        ))
(count-change 20 '(1 5 10 25 50))
